###############使用git客户端连接git服务配置###############

$ ssh-keygen -t rsa -C "youremail@example.com" 创建SSH Key

如果多个存在多个git服务器，需要生成多个key 
1： cd .ssh 目录
2： $ ssh-keygen -t rsa -C "youremail@example.com"  -f id_xxx(具体id名称，区分其他服务器)
3： ssh-agent bash  把生成的新秘钥添加到 SSH agent中
   ssh-add ~/.ssh/id_rsa_work
4：生成config 文件
   # 该文件用于配置私钥对应的服务器
   # Default github user(first@mail.com)
   Host github.com
   HostName github.com
   User git
   IdentityFile C:/Users/Administrator/.ssh/id_rsa

   # second user(second@mail.com)
   # 建一个github别名，新建的帐号使用这个别名做克隆和更新
   Host github2
   HostName github.com
   User git
   IdentityFile C:/Users/Administrator/.ssh/id_rsa_work

解决ssh权限问题（）:

通常一台电脑生成一个ssh不会有这个问题，当一台电脑生成多个ssh的时候，就可能遇到这个问题，解决步骤如下：

1、查看系统ssh-key代理,执行如下命令

1
$ ssh-add -l
　　以上命令如果输出  The agent has no identities. 则表示没有代理。如果系统有代理，可以执行下面的命令清除代理:

1
$ ssh-add -D
2、然后依次将不同的ssh添加代理，执行命令如下：

1
2
$ ssh-add ~/.ssh/id_rsa
$ ssh-add ~/.ssh/aysee
　你会分别得到如下提示：

1
2048 8e:71:ad:88:78:80:b2:d9:e1:2d:1d:e4:be:6b:db:8e /Users/aysee/.ssh/id_rsa (RSA)
　　和

1
2
2048 8e:71:ad:88:78:80:b2:d9:e1:2d:1d:e4:be:6b:db:8e /Users/aysee/.ssh/id_rsa (RSA)
2048 a7:f4:0d:f1:b1:76:0b:bf:ed:9f:53:8c:3f:4c:f4:d6 /Users/aysee/.ssh/aysee (RSA)
　　如果使用 ssh-add ~/.ssh/id_rsa的时候报如下错误，则需要先运行一下 ssh-agent bash 命令后再执行 ssh-add ...等命令

5：把publish_key 添加到git服务器

如果你只是通过这篇文章中所述配置了Host，那么你多个账号下面的提交用户会是一个人，所以需要通过命令git config --global --unset user.email删除用户账户设置，在每一个repo下面使用git config --local user.email '你的github邮箱@mail.com' 命令单独设置用户账户信息

6：ssh -T git@github.com 测试配置是否成功

###################git 常用命令#######################
1: git remote -v 查看远程仓库地址
2: git init . 把一个目录变成git管理的仓库
3: git status  查看当前仓库的状态
4: git add <filename> 添加单个文件到仓库
5: git add -A 全部添加到仓库
6: git commit -a -m "init" 提交添加的文件 -m <message> 注释
7: git remote add origin git@github.com:ruishengli/test2.git 添加到远端仓库 
8: git push -u origin master 把当前分支推送到远端，加上-u,不但会推送内容，还会把本地master分支和远程的master分支关联起来

9：git pull origin master

warning: LF will be replaced by CRLF问题解决方法
10：$ git config --global core.autocrlf false